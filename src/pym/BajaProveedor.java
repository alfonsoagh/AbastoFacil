/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pym;

import clases.conex.CRUD;
import herramientas.Propiedades;
import herramientas.RoundedBorder;
import herramientas.TextPrompt;
import herramientas.Validaciones;
import java.awt.Color;
import java.awt.Font;
import java.sql.ResultSet;
import java.util.ArrayList;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.plaf.basic.BasicButtonUI;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

/**
 *
 * @author jonas
 */
public class BajaProveedor extends javax.swing.JPanel
{

    boolean estado;
    DefaultTableModel m2 = new DefaultTableModel();

    /**
     * Creates new form AltasProductos
     */
    public BajaProveedor()
    {
        initComponents();
        opcProveedor.setUI(Propiedades.createUI(this));
        bajaP.setUI(new BasicButtonUI());
        bajaP.setBorder(new RoundedBorder(10));
        atras.setUI(new BasicButtonUI());
        atras.setBorder(new RoundedBorder(10));
        consultaCombo(opcProveedor, "Proveedor", "");
        TextPrompt buscaProv = new TextPrompt("Ingrese id o nombre del Proveedor", buscaProveedor);
        listenersBuscadores();
        buscaProveedor.setEnabled(false);
        sc.setVisible(false);

    }

    // Carga de nuevo los productos a el comboBox
    public void consultaCombo(JComboBox jb, String tabla, String sentencia)
    {
        jb.removeAllItems();
        jb.addItem("Seleccione un Proovedor");
        ResultSet rat = CRUD.read(tabla, "*", sentencia);
        cargarComboBox(rat, jb);
    }

    public void cargarComboBox(ResultSet rat, JComboBox jcb)
    {
        if (rat != null)
        {
            try
            {
                while (rat.next())
                {
                    jcb.addItem(rat.getString("id") + ":  " + rat.getString("nombre"));
                }
            } catch (Exception e)
            {
                System.out.println(e.toString());
            }
        } else
        {

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        bienvenidos = new javax.swing.JLabel();
        opcProveedor = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        bajaP = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        buscaProveedor = new javax.swing.JTextField();
        nombreB = new javax.swing.JRadioButton();
        idB = new javax.swing.JRadioButton();
        sc = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        atras = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(null);

        bienvenidos.setFont(new java.awt.Font("Agency FB", 1, 36)); // NOI18N
        bienvenidos.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        bienvenidos.setText("Baja Proveedor");
        add(bienvenidos);
        bienvenidos.setBounds(250, 50, 280, 44);

        opcProveedor.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        opcProveedor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione un proveedor" }));
        opcProveedor.setToolTipText("");
        opcProveedor.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        opcProveedor.addItemListener(new java.awt.event.ItemListener()
        {
            public void itemStateChanged(java.awt.event.ItemEvent evt)
            {
                opcProveedorItemStateChanged(evt);
            }
        });
        opcProveedor.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                opcProveedorActionPerformed(evt);
            }
        });
        add(opcProveedor);
        opcProveedor.setBounds(220, 320, 350, 28);

        jLabel13.setFont(new java.awt.Font("Agency FB", 1, 24)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel13.setText("Proveedor");
        add(jLabel13);
        jLabel13.setBounds(220, 190, 130, 24);

        bajaP.setBackground(new java.awt.Color(33, 12, 255));
        bajaP.setFont(new java.awt.Font("Agency FB", 1, 20)); // NOI18N
        bajaP.setForeground(new java.awt.Color(255, 255, 255));
        bajaP.setText("Eliminar");
        bajaP.setBorder(null);
        bajaP.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bajaP.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        bajaP.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseEntered(java.awt.event.MouseEvent evt)
            {
                bajaPMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt)
            {
                bajaPMouseExited(evt);
            }
        });
        bajaP.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                bajaPActionPerformed(evt);
            }
        });
        add(bajaP);
        bajaP.setBounds(330, 520, 140, 50);
        add(jSeparator1);
        jSeparator1.setBounds(220, 260, 350, 10);

        buscaProveedor.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        buscaProveedor.setToolTipText("");
        buscaProveedor.setBorder(null);
        buscaProveedor.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusGained(java.awt.event.FocusEvent evt)
            {
                buscaProveedorFocusGained(evt);
            }
        });
        buscaProveedor.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                buscaProveedorMouseClicked(evt);
            }
        });
        buscaProveedor.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                buscaProveedorActionPerformed(evt);
            }
        });
        buscaProveedor.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyTyped(java.awt.event.KeyEvent evt)
            {
                buscaProveedorKeyTyped(evt);
            }
        });
        add(buscaProveedor);
        buscaProveedor.setBounds(220, 230, 350, 30);

        nombreB.setText("Buscar con Nombre");
        nombreB.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                nombreBActionPerformed(evt);
            }
        });
        add(nombreB);
        nombreB.setBounds(440, 270, 130, 25);

        idB.setText("Buscar con ID");
        idB.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                idBActionPerformed(evt);
            }
        });
        add(idB);
        idB.setBounds(220, 270, 130, 25);

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String []
            {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        sc.setViewportView(table);

        add(sc);
        sc.setBounds(130, 390, 540, 60);

        atras.setBackground(new java.awt.Color(255, 255, 255));
        atras.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/IconoAtras.png"))); // NOI18N
        atras.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseEntered(java.awt.event.MouseEvent evt)
            {
                atrasMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt)
            {
                atrasMouseExited(evt);
            }
        });
        atras.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                atrasActionPerformed(evt);
            }
        });
        add(atras);
        atras.setBounds(40, 20, 80, 57);
    }// </editor-fold>//GEN-END:initComponents

    private void opcProveedorActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_opcProveedorActionPerformed
    {//GEN-HEADEREND:event_opcProveedorActionPerformed
        sc.setVisible(false);
        if (opcProveedor.getSelectedIndex() != 0 && opcProveedor.getItemCount() > 1)
        {
            sc.setVisible(true);
            table.setRowHeight(32);
            m2 = new DefaultTableModel();
            String c2[] =
            {
                "Nombre", "Telefono", "Direcci√≥n"
            };
            m2.setColumnIdentifiers(c2);
            table.setModel(m2);
            try
            {
                String sentencia = "id=" + (opcProveedor.getSelectedItem().toString().split(":")[0]);
                ResultSet rat = CRUD.read("proveedor", "*", "WHERE " + sentencia);
                rat.next();
                String f[] =
                {
                    rat.getString("nombre"), rat.getString("telefono"),
                    rat.getString("direccion")
                };
                m2.addRow(f);
            } catch (Exception e)
            {
                System.out.println("asdasaaaaaaaaaaaaa");
            }
            table.setEnabled(false);
        }
    }//GEN-LAST:event_opcProveedorActionPerformed

    private void bajaPMouseEntered(java.awt.event.MouseEvent evt)//GEN-FIRST:event_bajaPMouseEntered
    {//GEN-HEADEREND:event_bajaPMouseEntered
        bajaP.setBackground(new Color(30, 161, 255));
    }//GEN-LAST:event_bajaPMouseEntered

    private void bajaPMouseExited(java.awt.event.MouseEvent evt)//GEN-FIRST:event_bajaPMouseExited
    {//GEN-HEADEREND:event_bajaPMouseExited
        bajaP.setBackground(new Color(33, 12, 255));
    }//GEN-LAST:event_bajaPMouseExited

    private void bajaPActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_bajaPActionPerformed
    {//GEN-HEADEREND:event_bajaPActionPerformed
        if (!(opcProveedor.getItemCount() == 1))
        {
            if (!(opcProveedor.getSelectedIndex() == 0))
            {
                Object[] options =
                {
                    "S√≠", "Cancelar"
                };
                if (JOptionPane.showOptionDialog(null,
                        "¬øDeseas continuar? Se eliminara toda la informaci√≥n \n dependiente de este Proveedor",
                        "Confirmaci√≥n",
                        JOptionPane.YES_NO_OPTION,
                        JOptionPane.QUESTION_MESSAGE,
                        null,
                        options,
                        options[0]) == 0)
                {
                    String sentencia = "id=" + (opcProveedor.getSelectedItem().toString().split(":")[0]);
                    CRUD.delete("proveedor", sentencia);
                    consultaCombo(opcProveedor, "proveedor", "");
                    idB.setSelected(false);
                    nombreB.setSelected(false);
                    buscaProveedor.setText("");
                    buscaProveedor.setEnabled(false);
                    JOptionPane.showMessageDialog(null, "Proveedor ELIMINADO");
                    ResultSet rat = CRUD.read("Proveedor", "*", "");
                    try
                    {
                        if (!rat.next())
                        {
                            VtnPrincipal.pintar(new MenuOpciones());
                            JOptionPane.showMessageDialog(null, "Ya no hay Proveedores para Eliminar");
                        }
                    } catch (Exception e)
                    {
                    }
                }
            } else
            {
                JOptionPane.showMessageDialog(null, "Seleccione un Proveedor para ELIMINAR");
            }
        } else
        {
            JOptionPane.showMessageDialog(null, "NO hay datos para ELIMINAR");
        }
    }//GEN-LAST:event_bajaPActionPerformed

    private void opcProveedorItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_opcProveedorItemStateChanged
    {//GEN-HEADEREND:event_opcProveedorItemStateChanged


    }//GEN-LAST:event_opcProveedorItemStateChanged

    private void buscaProveedorFocusGained(java.awt.event.FocusEvent evt)//GEN-FIRST:event_buscaProveedorFocusGained
    {//GEN-HEADEREND:event_buscaProveedorFocusGained

    }//GEN-LAST:event_buscaProveedorFocusGained

    private void buscaProveedorMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_buscaProveedorMouseClicked
    {//GEN-HEADEREND:event_buscaProveedorMouseClicked

    }//GEN-LAST:event_buscaProveedorMouseClicked

    private void buscaProveedorActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_buscaProveedorActionPerformed
    {//GEN-HEADEREND:event_buscaProveedorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buscaProveedorActionPerformed

    private void buscaProveedorKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_buscaProveedorKeyTyped
    {//GEN-HEADEREND:event_buscaProveedorKeyTyped
        if (estado)
        {
            Validaciones.validaEntero(evt, 13, buscaProveedor.getText());
        } else
        {
            Validaciones.validaLetra(evt, 20, buscaProveedor.getText());
        }
    }//GEN-LAST:event_buscaProveedorKeyTyped

    private void idBActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_idBActionPerformed
    {//GEN-HEADEREND:event_idBActionPerformed
        buscaProveedor.setText("");
        if (idB.isSelected())
        {
            buscaProveedor.setText("");
            estado = true;
            if (nombreB.isSelected())
            {
                nombreB.setSelected(false);
            }
            buscaProveedor.setEnabled(true);
        } else
        {
            if (nombreB.isSelected())
            {
                buscaProveedor.setEnabled(true);
            } else
            {
                buscaProveedor.setEnabled(false);
            }
        }
    }//GEN-LAST:event_idBActionPerformed

    private void nombreBActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_nombreBActionPerformed
    {//GEN-HEADEREND:event_nombreBActionPerformed
        buscaProveedor.setText("");
        if (nombreB.isSelected())
        {
            estado = false;
            if (idB.isSelected())
            {
                idB.setSelected(false);
            }
            buscaProveedor.setEnabled(true);
        } else
        {
            if (idB.isSelected())
            {
                buscaProveedor.setEnabled(true);
            } else
            {
                buscaProveedor.setEnabled(false);
            }
        }
    }//GEN-LAST:event_nombreBActionPerformed

    private void atrasMouseEntered(java.awt.event.MouseEvent evt)//GEN-FIRST:event_atrasMouseEntered
    {//GEN-HEADEREND:event_atrasMouseEntered
        atras.setBackground(new Color(240, 240, 240));
    }//GEN-LAST:event_atrasMouseEntered

    private void atrasMouseExited(java.awt.event.MouseEvent evt)//GEN-FIRST:event_atrasMouseExited
    {//GEN-HEADEREND:event_atrasMouseExited
        atras.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_atrasMouseExited

    private void atrasActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_atrasActionPerformed
    {//GEN-HEADEREND:event_atrasActionPerformed
        MenuOpciones.pintarOpc(new GestionProveedores());
    }//GEN-LAST:event_atrasActionPerformed

    public void listenersBuscadores()
    {
        buscaProveedor.getDocument().addDocumentListener(new DocumentListener()
        {
            @Override
            public void insertUpdate(DocumentEvent e)
            {
                // Acci√≥n cuando se inserta texto
                if (buscaProveedor.getText().isEmpty())
                {
                    consultaCombo(opcProveedor, "Proveedor", "");
                } else
                {
                    try
                    {
                        Integer.parseInt(buscaProveedor.getText());
                        String sentencia = "WHERE id = " + buscaProveedor.getText() + "";
                        System.out.println(sentencia);
                        consultaCombo(opcProveedor, "Proveedor", sentencia);
                    } catch (Exception er)
                    {
                        String sentencia = "WHERE nombre LIKE '%" + buscaProveedor.getText() + "%'";
                        System.out.println(sentencia);
                        consultaCombo(opcProveedor, "Proveedor", sentencia);
                    }
                }
            }

            @Override
            public void removeUpdate(DocumentEvent e)
            {
                // Acci√≥n cuando se elimina texto
                if (buscaProveedor.getText().isEmpty())
                {
                    consultaCombo(opcProveedor, "Proveedor", "");
                } else
                {
                    try
                    {
                        Integer.parseInt(buscaProveedor.getText());
                        String sentencia = "WHERE id = " + buscaProveedor.getText() + "";
                        System.out.println(sentencia);
                        consultaCombo(opcProveedor, "Proveedor", sentencia);
                    } catch (Exception er)
                    {
                        String sentencia = "WHERE nombre LIKE '%" + buscaProveedor.getText() + "%'";
                        System.out.println(sentencia);
                        consultaCombo(opcProveedor, "Proveedor", sentencia);
                    }
                }
            }

            @Override
            public void changedUpdate(DocumentEvent e)
            {

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton atras;
    private javax.swing.JButton bajaP;
    private javax.swing.JLabel bienvenidos;
    private javax.swing.JTextField buscaProveedor;
    private javax.swing.JRadioButton idB;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JRadioButton nombreB;
    private javax.swing.JComboBox<String> opcProveedor;
    private javax.swing.JScrollPane sc;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
