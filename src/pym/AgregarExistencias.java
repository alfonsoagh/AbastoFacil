/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pym;

import clases.conex.CRUD;
import herramientas.Propiedades;
import herramientas.RoundedBorder;
import herramientas.TextPrompt;
import herramientas.Validaciones;
import java.awt.Color;
import java.sql.ResultSet;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.plaf.basic.BasicButtonUI;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author PC
 */
public class AgregarExistencias extends javax.swing.JPanel
{

    /**
     * Creates new form AgregarExistencias
     */
    boolean estado;
    DefaultTableModel m2 = new DefaultTableModel();
    Color colorD = new Color(33, 12, 255);
    Color colorS = new Color(30, 161, 255);

    public AgregarExistencias()
    {
        initComponents();
        textExist.setVisible(false);
        exis.setVisible(false);
        jSeparator2.setVisible(false);
        opcProductos.setUI(Propiedades.createUI(this));
        agregarE.setUI(new BasicButtonUI());
        agregarE.setBorder(new RoundedBorder(10));
        consultaCombo(opcProductos, "Producto", "");
        TextPrompt buscaProd = new TextPrompt("Ingrese clave o nombre del Producto", buscaProducto);
        listenersBuscadores();
        buscaProducto.setEnabled(false);
        jScrollPane1.setVisible(false);
    }

    // Carga de nuevo los productos a el comboBox
    public void consultaCombo(JComboBox jb, String tabla, String sentencia)
    {
        jb.removeAllItems();
        jb.addItem("Seleccione un producto");
        ResultSet rat = CRUD.read(tabla, "*", sentencia);
        cargarComboBox(rat, jb);
    }

    public void cargarComboBox(ResultSet rat, JComboBox jcb)
    {
        if (rat != null)
        {
            try
            {
                while (rat.next())
                {
                    jcb.addItem(rat.getString("id") + ":  " + rat.getString("nombre"));
                }
            } catch (Exception e)
            {
                System.out.println(e.toString());
            }
        } else
        {

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        opcProductos = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        agregarE = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        buscaProducto = new javax.swing.JTextField();
        nombreB = new javax.swing.JRadioButton();
        claveB = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jSeparator2 = new javax.swing.JSeparator();
        exis = new javax.swing.JTextField();
        textExist = new javax.swing.JLabel();
        exisErr = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(null);

        opcProductos.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        opcProductos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione un producto" }));
        opcProductos.setToolTipText("");
        opcProductos.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        opcProductos.addItemListener(new java.awt.event.ItemListener()
        {
            public void itemStateChanged(java.awt.event.ItemEvent evt)
            {
                opcProductosItemStateChanged(evt);
            }
        });
        opcProductos.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                opcProductosActionPerformed(evt);
            }
        });
        add(opcProductos);
        opcProductos.setBounds(220, 180, 350, 28);

        jLabel13.setFont(new java.awt.Font("Agency FB", 1, 24)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel13.setText("Producto");
        add(jLabel13);
        jLabel13.setBounds(220, 50, 130, 24);

        agregarE.setBackground(new java.awt.Color(33, 12, 255));
        agregarE.setFont(new java.awt.Font("Agency FB", 1, 20)); // NOI18N
        agregarE.setForeground(new java.awt.Color(255, 255, 255));
        agregarE.setText("Agregar");
        agregarE.setBorder(null);
        agregarE.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        agregarE.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        agregarE.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseEntered(java.awt.event.MouseEvent evt)
            {
                agregarEMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt)
            {
                agregarEMouseExited(evt);
            }
        });
        agregarE.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                agregarEActionPerformed(evt);
            }
        });
        add(agregarE);
        agregarE.setBounds(330, 350, 130, 50);
        add(jSeparator1);
        jSeparator1.setBounds(220, 120, 350, 10);

        buscaProducto.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        buscaProducto.setToolTipText("");
        buscaProducto.setBorder(null);
        buscaProducto.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusGained(java.awt.event.FocusEvent evt)
            {
                buscaProductoFocusGained(evt);
            }
        });
        buscaProducto.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                buscaProductoMouseClicked(evt);
            }
        });
        buscaProducto.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                buscaProductoActionPerformed(evt);
            }
        });
        buscaProducto.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyTyped(java.awt.event.KeyEvent evt)
            {
                buscaProductoKeyTyped(evt);
            }
        });
        add(buscaProducto);
        buscaProducto.setBounds(220, 90, 350, 30);

        nombreB.setText("Buscar con Nombre");
        nombreB.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                nombreBActionPerformed(evt);
            }
        });
        add(nombreB);
        nombreB.setBounds(440, 130, 130, 25);

        claveB.setText("Buscar con Clave");
        claveB.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                claveBActionPerformed(evt);
            }
        });
        add(claveB);
        claveB.setBounds(220, 130, 130, 25);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String []
            {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        add(jScrollPane1);
        jScrollPane1.setBounds(140, 430, 540, 60);
        add(jSeparator2);
        jSeparator2.setBounds(220, 310, 350, 10);

        exis.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        exis.setToolTipText("");
        exis.setBorder(null);
        exis.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusGained(java.awt.event.FocusEvent evt)
            {
                exisFocusGained(evt);
            }
        });
        exis.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                exisMouseClicked(evt);
            }
        });
        exis.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                exisActionPerformed(evt);
            }
        });
        exis.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyTyped(java.awt.event.KeyEvent evt)
            {
                exisKeyTyped(evt);
            }
        });
        add(exis);
        exis.setBounds(220, 280, 350, 30);

        textExist.setFont(new java.awt.Font("Agency FB", 1, 24)); // NOI18N
        textExist.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        textExist.setText("Existencias por agregar");
        add(textExist);
        textExist.setBounds(220, 240, 230, 40);

        exisErr.setForeground(new java.awt.Color(255, 0, 0));
        exisErr.setText("Rellenar Campo");
        add(exisErr);
        exisErr.setBounds(220, 310, 350, 20);
    }// </editor-fold>//GEN-END:initComponents

    private void opcProductosItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_opcProductosItemStateChanged
    {//GEN-HEADEREND:event_opcProductosItemStateChanged

    }//GEN-LAST:event_opcProductosItemStateChanged

    private void opcProductosActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_opcProductosActionPerformed
    {//GEN-HEADEREND:event_opcProductosActionPerformed
        jScrollPane1.setVisible(false);
        textExist.setVisible(false);
        exis.setVisible(false);
        jSeparator2.setVisible(false);
        exisErr.setVisible(false);
        if (opcProductos.getSelectedIndex() != 0 && opcProductos.getItemCount() > 1)
        {
            actualizarDatosInterfaz();
        }

    }//GEN-LAST:event_opcProductosActionPerformed

    private void agregarEMouseEntered(java.awt.event.MouseEvent evt)//GEN-FIRST:event_agregarEMouseEntered
    {//GEN-HEADEREND:event_agregarEMouseEntered
        agregarE.setBackground(colorS);
    }//GEN-LAST:event_agregarEMouseEntered

    private void agregarEMouseExited(java.awt.event.MouseEvent evt)//GEN-FIRST:event_agregarEMouseExited
    {//GEN-HEADEREND:event_agregarEMouseExited
        agregarE.setBackground(colorD);
    }//GEN-LAST:event_agregarEMouseExited

    private void agregarEActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_agregarEActionPerformed
    {//GEN-HEADEREND:event_agregarEActionPerformed

        estado = false;
        if (exis.getText().isEmpty())
        {
            exisErr.setVisible(true);
            estado = true;
        }
        if (!(opcProductos.getItemCount() == 1) && !estado)
        {
            String sentencia = "id=" + (opcProductos.getSelectedItem().toString().split(":")[0]);
            CRUD.updateStonks(sentencia, Integer.parseInt(exis.getText()));
            actualizarDatosInterfaz();
            exis.setText("");
            JOptionPane.showMessageDialog(null, "Existencias agregadas");
        } else
        {
            JOptionPane.showMessageDialog(null, "Escriba la cantidad para agregar");
        }
    }//GEN-LAST:event_agregarEActionPerformed

    private void buscaProductoFocusGained(java.awt.event.FocusEvent evt)//GEN-FIRST:event_buscaProductoFocusGained
    {//GEN-HEADEREND:event_buscaProductoFocusGained

    }//GEN-LAST:event_buscaProductoFocusGained

    private void buscaProductoMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_buscaProductoMouseClicked
    {//GEN-HEADEREND:event_buscaProductoMouseClicked

    }//GEN-LAST:event_buscaProductoMouseClicked

    private void buscaProductoActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_buscaProductoActionPerformed
    {//GEN-HEADEREND:event_buscaProductoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buscaProductoActionPerformed

    private void buscaProductoKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_buscaProductoKeyTyped
    {//GEN-HEADEREND:event_buscaProductoKeyTyped
        if (estado)
        {
            Validaciones.validaEntero(evt, 13, buscaProducto.getText());
        } else
        {
            Validaciones.validaLetra(evt, 20, buscaProducto.getText());
        }
    }//GEN-LAST:event_buscaProductoKeyTyped

    private void nombreBActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_nombreBActionPerformed
    {//GEN-HEADEREND:event_nombreBActionPerformed
        buscaProducto.setText("");
        if (nombreB.isSelected())
        {
            estado = false;
            if (claveB.isSelected())
            {
                claveB.setSelected(false);
            }
            buscaProducto.setEnabled(true);
        } else
        {
            if (claveB.isSelected())
            {
                buscaProducto.setEnabled(true);
            } else
            {
                buscaProducto.setEnabled(false);
            }
        }
    }//GEN-LAST:event_nombreBActionPerformed

    private void claveBActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_claveBActionPerformed
    {//GEN-HEADEREND:event_claveBActionPerformed
        buscaProducto.setText("");
        if (claveB.isSelected())
        {
            buscaProducto.setText("");
            estado = true;
            if (nombreB.isSelected())
            {
                nombreB.setSelected(false);
            }
            buscaProducto.setEnabled(true);
        } else
        {
            if (nombreB.isSelected())
            {
                buscaProducto.setEnabled(true);
            } else
            {
                buscaProducto.setEnabled(false);
            }
        }
    }//GEN-LAST:event_claveBActionPerformed

    private void exisFocusGained(java.awt.event.FocusEvent evt)//GEN-FIRST:event_exisFocusGained
    {//GEN-HEADEREND:event_exisFocusGained
        exisErr.setVisible(false);
    }//GEN-LAST:event_exisFocusGained

    private void exisMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_exisMouseClicked
    {//GEN-HEADEREND:event_exisMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_exisMouseClicked

    private void exisActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_exisActionPerformed
    {//GEN-HEADEREND:event_exisActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_exisActionPerformed

    private void exisKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_exisKeyTyped
    {//GEN-HEADEREND:event_exisKeyTyped
        Validaciones.validaEntero(evt, 10, exis.getText());
    }//GEN-LAST:event_exisKeyTyped
    public void listenersBuscadores()
    {
        buscaProducto.getDocument().addDocumentListener(new DocumentListener()
        {
            @Override
            public void insertUpdate(DocumentEvent e)
            {
                // Acción cuando se inserta texto
                if (buscaProducto.getText().isEmpty())
                {
                    consultaCombo(opcProductos, "Producto", "");
                } else
                {
                    try
                    {
                        Integer.parseInt(buscaProducto.getText());
                        String sentencia = "WHERE id = " + buscaProducto.getText() + "";
                        System.out.println(sentencia);
                        consultaCombo(opcProductos, "Producto", sentencia);
                    } catch (Exception er)
                    {
                        String sentencia = "WHERE nombre LIKE '%" + buscaProducto.getText() + "%'";
                        System.out.println(sentencia);
                        consultaCombo(opcProductos, "Producto", sentencia);
                    }
                }
            }

            @Override
            public void removeUpdate(DocumentEvent e)
            {
                // Acción cuando se elimina texto
                if (buscaProducto.getText().isEmpty())
                {
                    consultaCombo(opcProductos, "Producto", "");
                } else
                {
                    try
                    {
                        Integer.parseInt(buscaProducto.getText());
                        String sentencia = "WHERE id = " + buscaProducto.getText() + "";
                        System.out.println(sentencia);
                        consultaCombo(opcProductos, "Producto", sentencia);
                    } catch (Exception er)
                    {
                        String sentencia = "WHERE nombre LIKE '%" + buscaProducto.getText() + "%'";
                        System.out.println(sentencia);
                        consultaCombo(opcProductos, "Producto", sentencia);
                    }
                }
            }

            @Override
            public void changedUpdate(DocumentEvent e)
            {

            }
        });
    }

    public void actualizarDatosInterfaz()
    {

        textExist.setVisible(true);
        exis.setVisible(true);
        jSeparator2.setVisible(true);
        jScrollPane1.setVisible(true);
        jTable1.setRowHeight(32);
        m2 = new DefaultTableModel();
        String c2[] =
        {
            "Nombre Producto", "Cantidad"
        };
        m2.setColumnIdentifiers(c2);
        jTable1.setModel(m2);
        try
        {
            String sentencia = "id=" + (opcProductos.getSelectedItem().toString().split(":")[0]);
            ResultSet rat = CRUD.read("producto", "*", "WHERE " + sentencia);
            rat.next();
            String f[] =
            {
                rat.getString("nombre"),
                rat.getString("cantidad"),
            };
            m2.addRow(f);
        } catch (Exception e)
        {
            System.out.println("asdasaaaaaaaaaaaaa");
        }
        jTable1.setEnabled(false);

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agregarE;
    private javax.swing.JTextField buscaProducto;
    private javax.swing.JRadioButton claveB;
    private javax.swing.JTextField exis;
    private javax.swing.JLabel exisErr;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTable1;
    private javax.swing.JRadioButton nombreB;
    private javax.swing.JComboBox<String> opcProductos;
    private javax.swing.JLabel textExist;
    // End of variables declaration//GEN-END:variables
}
